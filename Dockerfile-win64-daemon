# Dockerfile for cross-compiling Verge Daemon to Windows 64-bit using MinGW
FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /coin

# Install dependencies for cross-compilation
RUN apt-get update && \
    apt-get install -y \
    software-properties-common \
    build-essential \
    git \
    mingw-w64 \
    g++-mingw-w64-x86-64 \
    autotools-dev \
    automake \
    libtool \
    pkg-config \
    curl \
    unzip \
    wget \
    bsdmainutils \
    python3 \
    ca-certificates

# Clone Verge source code
RUN git clone https://github.com/vergecurrency/verge.git /coin/verge

# Build Berkeley DB 4.8 (required by Verge) for Windows target
WORKDIR /coin/verge/contrib

# Build db4 from source
WORKDIR /coin/verge/contrib
RUN sed -i '/^# Build db4 from source/a\    cp /usr/share/automake-1.16/config.guess dist/config.guess\n    cp /usr/share/automake-1.16/config.sub dist/config.sub' install_db4.sh

# Set environment for MinGW cross-compilation
ENV HOST=x86_64-w64-mingw32
ENV CC=$HOST-gcc
ENV CXX=$HOST-g++
ENV AR=$HOST-ar
ENV RANLIB=$HOST-ranlib
ENV STRIP=$HOST-strip

# Compile Verge
WORKDIR /coin/verge

RUN ./autogen.sh && \
    ./configure --host=${HOST} \
    --with-gui=no \
    --disable-tests \
    --disable-bench \
    LDFLAGS="-L/coin/verge/db4/lib" \
    CPPFLAGS="-I/coin/verge/db4/include" \
    CXX=${CXX} CC=${CC} && \
    make -j$(nproc)

# Rename and move final binary
RUN mkdir -p /coin/dist && \
    mv src/verged.exe /coin/dist/verged.exe

# Optional: expose this as an artifact
WORKDIR /coin/dist